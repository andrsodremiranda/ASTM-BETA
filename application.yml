server: # REST and WS server
  port: 8090
  address: 127.0.0.1
spring:
  main:
    banner-mode: log
lavalink:
  plugins:
    - dependency: "com.dunctebot:skybot-lavalink-plugin:1.4.0"
      repository: "https://m2.duncte123.dev/releases"
    - dependency: "me.rohank05:lavalink-filter-plugin:0.0.1"
      repository: "https://jitpack.io"
    - dependency: "com.github.TopiSenpai.LavaSrc:lavasrc-plugin:3.1.7"
      repository: "https://jitpack.io"
    # - dependency: "com.github.topisenpai:sponsorblock-plugin:v1.0.3"
    #   repository: "https://jitpack.io"
  server:
    password: "youshallnotpass"
    sources:
      youtube: true
      bandcamp: true
      soundcloud: true
      twitch: true
      vimeo: true
      mixer: true
      http: true
      local: false
    bufferDurationMs: 400
    opusEncodingQuality: 5 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.
    resamplingQuality: LOW # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.
    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.
    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.
    youtubePlaylistLoadLimit: 9
    youtubeSearchEnabled: true
    soundcloudSearchEnabled: true
    gc-warnings: true

    #ratelimit:
    #  ipBlocks: [] # list of ip blocks
    #  excludedIps: [] # ips which should be explicit excluded from usage by lavalink
    #  strategy: "RotateOnBan" # RotateOnBan | LoadBalance | NanoSwitch | RotatingNanoSwitch
    #  searchTriggersFail: true # Whether a search 429 should trigger marking the ip as failing

metrics:
  prometheus:
    enabled: false
    endpoint: /metrics

sentry:
  dsn: ""

logging:

  file:
    path: ./.logs/lavalink/

  level:
    root: INFO
    lavalink: INFO

  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 10

plugins:
  dunctebot:
    ttsLanguage: "pt-BR" # language of the TTS engine
    sources:
      getyarn: true
      clypit: true
      tts: true
      pornhub: false
      reddit: true
      ocremix: true
      tiktok: true
      mixcloud: true
      soundgasm: true

  lavasrc:
    providers: # Custom providers for track loading. This is the default
      - "ytsearch:\"%ISRC%\"" # Will be ignored if track does not have an ISRC. See https://en.wikipedia.org/wiki/International_Standard_Recording_Code
      - "ytsearch:%QUERY%" # Will be used if track has no ISRC or no track could be found for the ISRC
    # - "dzisrc:%ISRC%" # Deezer ISRC provider
    # - "scsearch:%QUERY%" you can add multiple other fallback sources here
    sources:
      spotify: false # Enable Spotify source
      applemusic: true # Enable Apple Music source
      deezer: false # Enable Deezer source
    spotify:
      clientId: "your client id"
      clientSecret: "your client secret"
      countryCode: "US" # the country code you want to use for filtering the artists top tracks. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
    applemusic:
      countryCode: "US" # the country code you want to use for filtering the artists top tracks and language. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
    deezer:
      masterDecryptionKey: "your master decryption key" # the master key used for decrypting the deezer tracks. (yes this is not here you need to get it from somewhere else)
